File '../../work_flow/src/DomainManage.cpp'
Lines executed:84.21% of 38
去掉判空后：100% of  35
Creating 'DomainManage.cpp.gcov'
        -:    0:Source:../../work_flow/src/DomainManage.cpp
        -:    0:Graph:DomainManage.gcno
        -:    0:Data:DomainManage.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:/*************************************************************************
        -:    2:	> File Name: DomainManage.cpp
        -:    3:	> Author: TengyueMa
        -:    4:	> Mail: lumujin@icloud.com
        -:    5:	> Created Time: Mon 08 Oct 2018 11:43:15 AM CST
        -:    6: ************************************************************************/
        -:    7:
        -:    8:#include <iostream>
        -:    9:#include "DomainManage.h"
        -:   10:#include "ul_log.h"
        -:   11:#include "Configure.h"
        -:   12:#include "spreg.h"
        -:   13:#include "SluErrorCode.h"
        -:   14:
        -:   15://< 构造函数
        7:   16:DomainManage::DomainManage(const string conf_file){
        7:   17:    int ret = load_conf(conf_file);
        7:   18:    if (ret < 0){
    #####:   19:        return;
        -:   20:    }
        -:   21:}
        -:   22:
        -:   23://< 析构函数
        9:   24:DomainManage::~DomainManage(){
        -:   25:    //< nothing;
        9:   26:}
        -:   27:
        -:   28://< 读取配置文件
        9:   29:int DomainManage::load_conf(const string conf_file, const string conf_path){
        9:   30:    if (conf_file == ""){
        1:   31:        fprintf(stderr, "DomainManage conf is null\n");
        1:   32:        return ERR_DOMAIN_MANAGE_CONF_NULL;
        -:   33:    }
        8:   34:    comcfg::Configure config;
        8:   35:    int ret = config.load(conf_path.c_str(), conf_file.c_str());
        8:   36:    if (ret < 0){
    #####:   37:        fprintf(stderr, "failed to load DomainManage config file\n");
    #####:   38:        return ERR_DOMAIN_MANAGE_LOAD_CONF;
        -:   39:    }
        -:   40:
        -:   41:    //< load Configure
        -:   42:    try {
        8:   43:        default_domain = config["DEFAULT_DOMAIN"].to_cstr();
        8:   44:        default_intent = config["DEFAULT_INTENT"].to_cstr();
        8:   45:        int domain_size = static_cast<int>(config["DOMAIN"][0]["DOMAIN"].size());
       24:   46:        for (int i = 0; i < domain_size; i++){
       16:   47:            domain_vec.push_back(config["DOMAIN"][0]["DOMAIN"][i].to_cstr());
        -:   48:        }
    =====:   49:    } catch(...){
    =====:   50:        fprintf(stderr, "failed to load DomainManage config file\n");
    =====:   51:        return ERR_DOMAIN_MANAGE_CONF_CONTENT;
        -:   52:    }
        -:   53:
        8:   54:    return 0;
        -:   55:}
        -:   56:
        -:   57://< 查询领域是否存在
        -:   58://< 返回>0 为存在
        2:   59:int DomainManage::find_domain(string domain_name){
        5:   60:    for (int i = 0; i < domain_vec.size(); i++){
        4:   61:        if (domain_vec[i] == domain_name){
        1:   62:            return i+1;
        -:   63:        }
        -:   64:    }
        -:   65:
        1:   66:    return 0;
        -:   67:}
        -:   68:
        -:   69://< 返回默认领域
        2:   70:string DomainManage::get_default_domain(){
        2:   71:    if (default_domain == ""){
        1:   72:        return "other";
        -:   73:    }
        1:   74:    return default_domain;
        -:   75:}
        -:   76:
        -:   77://< 返回默认意图
        2:   78:string DomainManage::get_default_intent(){
        2:   79:    if (default_intent == ""){
        1:   80:        return "other";
        -:   81:    }
        1:   82:    return default_intent;
        3:   83:}
        -:   84:
        -:   85:/* vim: set expandtab ts=4 sw=4 sts=4 tw=100: */
